#!/usr/bin/env bash
source "/etc/rikimaru/scripts/trycatch.sh"
source "/etc/rikimaru/config/mail_var.sh"


export RK_HOST_NAME="127.0.0.1";
export RK_CUR_ENV="local";
PM2_NAME=""
LOG_DESTINATION=rikimaru.log
COMMIT_MESSAGE="Default commit message from tool"
PUSH_TO="origin master"


USAGE_MESSAGE=$(cat <<-EOF
Usage:
    $0 Options
Options:
    [-e environment <local|server>]
    [-h   <string>]
    [-l log destinatinon <string>]
    [-p pm2 name <string>]
    [-m commit message <string>]
    [-t push to <string> example: "origin master"]
EOF
);


function usage() { echo "$USAGE_MESSAGE" 1>&2; exit 1; }


while getopts ":e:h:l:m:t:p:" opt; do
    case ${opt} in
        e)
            RK_CUR_ENV=$OPTARG
        ;;
        h)
            RK_HOST_NAME=$OPTARG
        ;;
        l)
            LOG_DESTINATION=$OPTARG
        ;;
        m)
            COMMIT_MESSAGE=$OPTARG
        ;;
        t)
            PUSH_TO=$OPTARG
        ;;
        p)
            PM2_NAME=$OPTARG
        ;;
        *)
            usage
        ;;
    esac
done

shift $((OPTIND-1))

if [ -z "${RK_HOST_NAME}" ] || [ -z "${RK_CUR_ENV}" ]; then
    usage
fi

function init_build_node_project_local() {
    yarn install || return 1;
    yarn  test || return 2;
    yarn  build || return 3;
}

function init_build_node_project_server() {
    local CUR_PM2_NAME=$1;
    echo "installing";
    npm install || return 1;
    echo "delete dist folder";
    rm -rf ./dist || return 2;
    echo "building"
    npm run build || return 3;
    echo "PM2  nya si $1 restarting";
    pm2 restart $1;
}

function prepare_local() {
    npm run test || return 1;
    git status;
    git add '.' ; 
    git commit -am "$COMMIT_MESSAGE" ;
    git push $PUSH_TO || return 6;
    return 0;
}

function build_node_project() {
    local CUR_ENV_NODE=$1;
    local CUR_PM2_NAME=$2;
    if [[ $CUR_ENV_NODE == "local" ]]; then
        init_build_node_project_local || return 1
        elif [[ $CUR_ENV_NODE == "server" ]]; then
        init_build_node_project_server $2 || return 1
    else
        echo "INVALID ENVIRONMENT";
        usage;
        return 1;
    fi
}

function clean_log() {
    rm "$LOG_DESTINATION";
    touch "$LOG_DESTINATION";
}

clean_log;

# Script start from here

prepare_local &>> $LOG_DESTINATION
PREPARE_LOCAL_EXIT=$?
echo "Preparing Local finish with status: $PREPARE_LOCAL_EXIT"



SSH_COMMAND=$(cat <<-EOF
            $(set -eE)
            $(typeset -f);
            cd /var/www/"$PM2_NAME";
            git pull origin master;
            build_node_project server $PM2_NAME;
            pm2 restart $PM2_NAME
EOF
);

function execute_ssh() {
    if [[ $PREPARE_LOCAL_EXIT -eq 0 ]]; then
        ssh $RK_HOST_NAME "$SSH_COMMAND" || return 1;
        return 0;
    fi
    return 99
}


execute_ssh &>> $LOG_DESTINATION
EXEECUTE_SSH_EXIT=$?

if [[ -n $EXEECUTE_SSH_EXIT ]]; then
    echo "Executing SSH command sequence finish with status $EXEECUTE_SSH_EXIT"
fi


# Status FLAGGINg
BUILD_STATUS="Success";
if [[ $PREPARE_LOCAL_EXIT -ne 0 ]]; then
    BUILD_STATUS="Failed in Prepare";
fi
if [[ $EXEECUTE_SSH_EXIT -ne 0 && $EXEECUTE_SSH_EXIT -ne 99 ]]; then
    BUILD_STATUS="Failed in SSH";
fi


echo -e "Build Status: $BUILD_STATUS for more detail please check the log file"


(
    echo -e "$MAIL_HEAD";
    echo -e "$MAIL_MSG"; 
    echo -e "Build Status: $BUILD_STATUS"
    echo -e "Terjadi Pada tanggal: $(date)"
    echo -e "<br/>"
    echo -e "$(cat $LOG_DESTINATION)";
    echo -e $MAIL_FOOTER;
) | sendmail -t
